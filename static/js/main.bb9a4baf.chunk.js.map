{"version":3,"sources":["components/products/product/style.js","components/products/product/Product.jsx","components/products/Products.jsx","assets/logo.PNG","components/navbar/styles.js","components/navbar/Navbar.jsx","components/cart/cartitem/styles.js","components/cart/cartitem/CartItem.jsx","components/cart/style.js","components/cart/Cart.jsx","components/checkoutform/checkout/styles.js","lib/commerce.js","components/checkoutform/FormInput.jsx","components/checkoutform/styles.js","components/checkoutform/SelectInput.jsx","components/checkoutform/AddressForm.jsx","components/checkoutform/Review.jsx","components/checkoutform/PaymentForm.jsx","components/checkoutform/checkout/Checkout.jsx","App.js","reportWebVitals.js","index.js"],"names":["makeStyles","productsRoot","margin","root","background","media","height","paddingTop","cardactions","padding","display","contentsDiv","justifyContent","paddingLeft","content","textAlign","Product","product","handleAddToCart","classes","useStyle","Card","className","CardMedia","image","source","title","name","CardContent","Typography","variant","dangerouslySetInnerHTML","__html","description","price","formatted_with_symbol","CardActions","disableSpacing","IconButton","onClick","id","AddShoppingCart","Products","products","Grid","container","spacing","map","style","item","xs","sm","md","lg","pushDown","marginBottom","cartGrow","width","img","theme","createTheme","palette","primary","main","blue","secondary","green","Navbar","quantity","location","useLocation","ThemeProvider","AppBar","Toolbar","component","Link","to","src","logo","alt","pathname","Badge","badgeContent","color","ShoppingCart","border","buttons","alignItems","actions","flexDirection","mediaContainer","CartItem","remove","update","Button","type","size","maxWidth","details","getMore","link","textDecoration","fontSize","Cart","cart","empty","samuel","isEmpty","line_items","length","EmptyCart","FilledCart","subtotal","checkout","Container","ShoppingBasket","Width","papper","commerce","Commerce","process","FormInput","label","placeholder","control","useFormContext","render","TextField","fullWidth","required","formProvider","paddingBottom","selectInput","addressButtons","marginTop","addressButton","paymentButtons","paymentButton","SelectInput","value","handleOnChange","optionList","InputLabel","align","Select","onChange","e","target","option","MenuItem","AddressForm","checkoutToken","next","useState","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","shippingSubdivisions","setShippingSubdivisions","shippingSubdivision","setShippingSubdivision","shippingOptions","setShippingOptions","shippingOption","setShippingOption","methods","useForm","countries","Object","entries","subdivisions","options","useEffect","fetchShippingCountries","fetchSubdivisions","fetchShippingOptions","checkoutTokenId","a","services","localeListShippingCountries","keys","countryCode","localeListSubdivisions","country","region","getShippingOptions","gutterBottom","onSubmit","handleSubmit","data","Review","List","disablePadding","live","ListItem","ListItemText","line_total","PaymentForm","prevStep","shippingData","stripePromise","loadStripe","event","elements","stripe","preventDefault","getCardElement","getElement","CardElement","createPaymentMethod","card","error","paymentMethod","console","log","Divider","steps","Checkout","activeStep","setActiveStep","setCheckoutToken","setShippingData","generateToken","token","nextStep","prev","Form","Confirmation","Paper","Stepper","step","Step","StepLabel","App","setProducts","setCart","fetchProducts","fetchCart","list","retrieve","productId","add","handleUpdateCartQty","handleRemoveFromCart","handleEmptyCart","total_items","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb9a4baf.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\nexport default makeStyles(() => ({\r\n  productsRoot: {\r\n    margin: \"20px\",\r\n  },\r\n  root: {\r\n    background: \"#ccc\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"75%\",\r\n  },\r\n  cardactions: {\r\n    margin: 0,\r\n    padding: 0,\r\n    display: \"flex\",\r\n  },\r\n  contentsDiv: {\r\n    background: \"#EEFFF1\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    padding: \"0 5px\",\r\n    paddingLeft: \"0px\",\r\n  },\r\n  content: {\r\n    textAlign: \"left\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  IconButton,\r\n  CardActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { AddShoppingCart } from \"@material-ui/icons\";\r\nimport useStyle from \"./style\";\r\n\r\nconst Product = ({ product, handleAddToCart }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        image={product.media.source}\r\n        className={classes.media}\r\n        title={product.name}\r\n      />\r\n      <div className={classes.contentsDiv}>\r\n        <CardContent className={classes.content}>\r\n          <div>\r\n            <Typography variant=\"h6\">{product.name}</Typography>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              dangerouslySetInnerHTML={{ __html: product.description }}\r\n            />\r\n            <Typography variant=\"subtitle2\">\r\n              {product.price.formatted_with_symbol}\r\n            </Typography>\r\n          </div>\r\n        </CardContent>\r\n        <CardActions disableSpacing className={classes.cardactions}>\r\n          <IconButton\r\n            aria-label=\"Add to Cart\"\r\n            onClick={() => handleAddToCart(product.id, 1)}\r\n          >\r\n            <AddShoppingCart />\r\n          </IconButton>\r\n        </CardActions>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Product from \"./product/Product\";\r\nimport useStyle from \"./product/style\";\r\n\r\nconst Products = ({ products, handleAddToCart }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <main className={classes.productsRoot}>\r\n      <Grid container justifyContent=\"center\" spacing={4}>\r\n        {products.map((product) => (\r\n          <Grid\r\n            style={{ textAlign: \"center\" }}\r\n            item\r\n            key={product.id}\r\n            xs={12}\r\n            sm={6}\r\n            md={4}\r\n            lg={3}\r\n          >\r\n            <Product product={product} handleAddToCart={handleAddToCart} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","export default __webpack_public_path__ + \"static/media/logo.be646ae2.PNG\";","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles(() => ({\r\n  root: {\r\n    padding: \"0 0px\",\r\n    background: \"#EEFFF1\",\r\n  },\r\n  pushDown: {\r\n    marginBottom: \"90px\",\r\n  },\r\n  cartGrow: {\r\n    width: \"80%\",\r\n  },\r\n  img: {\r\n    width: 150,\r\n    height: 50,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Badge,\r\n  ThemeProvider,\r\n  createTheme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { ShoppingCart } from \"@material-ui/icons\";\r\nimport logo from \"../../assets/logo.PNG\";\r\nimport useStyle from \"./styles\";\r\nimport { green, blue } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: blue[500],\r\n    },\r\n    secondary: {\r\n      main: green[200],\r\n    },\r\n  },\r\n});\r\nconst Navbar = ({ quantity }) => {\r\n  const classes = useStyle();\r\n  const location = useLocation();\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <AppBar className={classes.root}>\r\n        <Toolbar>\r\n          <Typography component={Link} to=\"/e-commerce-store/\">\r\n            <img src={logo} alt=\"logo\" className={classes.img} />\r\n          </Typography>\r\n          <div className={classes.cartGrow} />\r\n          {location.pathname === \"/e-commerce-store/\" && (\r\n            <IconButton aria-label=\"cart\" component={Link} to=\"/cart\">\r\n              <Badge badgeContent={quantity} color=\"primary\">\r\n                <ShoppingCart />\r\n              </Badge>\r\n            </IconButton>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.pushDown}></div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles(() => ({\r\n  root: { display: \"flex\", background: \"white\", padding: 5 },\r\n  media: {\r\n    width: 0,\r\n    paddingLeft: \"25%\",\r\n    border: \"solid 1px black\",\r\n    height: 100,\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  actions: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  mediaContainer: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n} from \"@material-ui/core\";\r\nimport useStyle from \"./styles\";\r\n\r\nconst CartItem = ({ product, remove, update }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        image={product.media.source}\r\n        alt={product.name}\r\n        className={classes.media}\r\n      />\r\n      <div className={classes.mediaContainer}>\r\n        <CardContent className={classes.content}>\r\n          <Typography variant=\"h5\">{product.name}</Typography>\r\n          <Typography variant=\"subtitle1\">\r\n            {product.price.formatted_with_symbol}\r\n          </Typography>\r\n        </CardContent>\r\n      </div>\r\n      <CardActions className={classes.actions}>\r\n        <div className={classes.buttons}>\r\n          <Button\r\n            type=\"button\"\r\n            size=\"small\"\r\n            onClick={() => update(product.id, product.quantity - 1)}\r\n          >\r\n            -\r\n          </Button>\r\n          <Typography>{product.quantity}</Typography>\r\n          <Button\r\n            type=\"button\"\r\n            size=\"small\"\r\n            onClick={() => update(product.id, product.quantity + 1)}\r\n          >\r\n            +\r\n          </Button>\r\n        </div>\r\n        <Button\r\n          variant=\"text\"\r\n          type=\"button\"\r\n          size=\"medium\"\r\n          color=\"secondary\"\r\n          onClick={() => remove(product.id)}\r\n        >\r\n          Remove\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles(() => ({\r\n  root: {\r\n    maxWidth: 800,\r\n  },\r\n  title: {\r\n    textAlign: \"left\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    padding: \"20px\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  getMore: {\r\n    textAlign: \"center\",\r\n    marginBottom: 60,\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n    fontSize: \"2rem\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport CartItem from \"./cartitem/CartItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  createTheme,\r\n  ThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport { ShoppingBasket } from \"@material-ui/icons\";\r\nimport samuel from \"./style\";\r\nimport { green, blue } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: blue[500],\r\n    },\r\n    secondary: {\r\n      main: green[200],\r\n    },\r\n  },\r\n});\r\n\r\nconst Cart = ({ cart, empty, remove, update }) => {\r\n  const classes = samuel();\r\n  const isEmpty = cart.line_items && !cart.line_items.length;\r\n\r\n  const EmptyCart = () => {\r\n    return <Typography variant=\"h5\">No Item to see.</Typography>;\r\n  };\r\n  const FilledCart = () => (\r\n    <ThemeProvider theme={theme}>\r\n      <Grid container spacing={4}>\r\n        {cart.line_items.map((product) => (\r\n          <Grid item key={product.id} xs={12} sm={12} md={12} lg={12}>\r\n            <CartItem product={product} remove={remove} update={update} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <div className={classes.details}>\r\n        <Typography variant=\"h5\" className={classes.subtotal}>\r\n          Subtotal:{cart.subtotal.formatted_with_symbol}\r\n        </Typography>\r\n        <div>\r\n          <Button\r\n            className={classes.empty}\r\n            size=\"medium\"\r\n            type=\"button\"\r\n            variant=\"text\"\r\n            color=\"secondary\"\r\n            onClick={empty}\r\n          >\r\n            Empty\r\n          </Button>\r\n          <Button\r\n            className={classes.checkout}\r\n            size=\"medium\"\r\n            type=\"button\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            component={Link}\r\n            to=\"/checkout\"\r\n          >\r\n            checkout\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n\r\n  if (!cart.line_items) return <div className=\"loading\">Loading...</div>;\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Typography className={classes.title} variant=\"h6\">\r\n        ITEMS YOU HAVE IN YOUR CART\r\n      </Typography>\r\n      {isEmpty ? <EmptyCart /> : <FilledCart />}\r\n      <div className={classes.getMore}>\r\n        <Link to=\"/e-commerce-store/\" className={classes.link}>\r\n          GET MORE ITEMS!!! <ShoppingBasket />\r\n        </Link>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles(() => ({\r\n  root: { Width: \"100%\", display: \"flex\", justifyContent: \"center\" },\r\n  main: {\r\n    width: 650,\r\n  },\r\n  papper: {\r\n    padding: \"30px 20px\",\r\n  },\r\n}));\r\n","import Commerce from \"@chec/commerce.js\";\r\nexport const commerce = new Commerce(\r\n  process.env.REACT_APP_CHEC_PUBLIC_TEST_KEY,\r\n  true\r\n);\r\n","import React from \"react\";\r\nimport { TextField, Grid } from \"@material-ui/core\";\r\nimport { useFormContext, Controller } from \"react-hook-form\";\r\n\r\nconst FormInput = ({ label, name, placeholder }) => {\r\n  const { control } = useFormContext();\r\n  return (\r\n    <Grid item xs={12} sm={6}>\r\n      <Controller\r\n        render={() => (\r\n          <TextField\r\n            label={label}\r\n            placeholder={placeholder}\r\n            fullWidth\r\n            required\r\n          />\r\n        )}\r\n        name={name}\r\n        control={control}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles(() => ({\r\n  root: {},\r\n  formProvider: {\r\n    textAlign: \"center\",\r\n    paddingBottom: \"30px\",\r\n  },\r\n  selectInput: {\r\n    color: \"red\",\r\n  },\r\n  addressButtons: {\r\n    marginTop: 40,\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  addressButton: {\r\n    width: 200,\r\n    height: \"auto\",\r\n  },\r\n  paymentButtons: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  paymentButton: {\r\n    margin: 7,\r\n    width: \"100%\",\r\n  },\r\n}));\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nconst SelectInput = ({ value, handleOnChange, label, optionList }) => {\r\n  return (\r\n    <Grid item xs={12} sm={6}>\r\n      <InputLabel align=\"left\">{label}</InputLabel>\r\n      <Select\r\n        align=\"left\"\r\n        fullWidth\r\n        value={value}\r\n        onChange={(e) => handleOnChange(e.target.value)}\r\n      >\r\n        {optionList.map((option) => (\r\n          <MenuItem key={option.id} value={option.id}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SelectInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { commerce } from \"../../lib/commerce\";\r\nimport { Button, Typography, Grid } from \"@material-ui/core\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport FormInput from \"./FormInput\";\r\nimport useStyle from \"./styles\";\r\nimport SelectInput from \"./SelectInput\";\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState(\"\");\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState(\"\");\r\n\r\n  const classes = useStyle();\r\n  const methods = useForm();\r\n\r\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\r\n    id: code,\r\n    label: name,\r\n  }));\r\n\r\n  const subdivisions = Object.entries(shippingSubdivisions).map(\r\n    ([code, name]) => ({\r\n      id: code,\r\n      label: name,\r\n    })\r\n  );\r\n\r\n  const options = shippingOptions.map((option) => ({\r\n    id: option.id,\r\n    label: `${option.description}-(${option.price.formatted_with_symbol})`,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (checkoutToken === null) return;\r\n    fetchShippingCountries(checkoutToken?.id);\r\n  }, [checkoutToken]);\r\n\r\n  useEffect(() => {\r\n    shippingCountry !== \"\" && fetchSubdivisions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    shippingSubdivision !== \"\" &&\r\n      fetchShippingOptions(\r\n        checkoutToken.id,\r\n        shippingCountry,\r\n        shippingSubdivision\r\n      );\r\n  }, [checkoutToken.id, shippingCountry, shippingSubdivision]);\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(\r\n      checkoutTokenId\r\n    );\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  const fetchSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\r\n      countryCode\r\n    );\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (checkoutTokenId, country, region) => {\r\n    const options = await commerce.checkout.getShippingOptions(\r\n      checkoutTokenId,\r\n      { country, region }\r\n    );\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.formProvider}>\r\n      <Typography variant=\"h6\" gutterBottom align=\"center\">\r\n        Address Form\r\n      </Typography>\r\n      <FormProvider {...methods}>\r\n        <form\r\n          onSubmit={methods.handleSubmit((data) =>\r\n            next({\r\n              ...data,\r\n              shippingCountry,\r\n              shippingSubdivision,\r\n              shippingOption,\r\n            })\r\n          )}\r\n        >\r\n          <Grid container spacing={3}>\r\n            <FormInput\r\n              label=\"First name\"\r\n              name=\"firstName\"\r\n              placeholder=\"ex: Samuel\"\r\n            />\r\n            <FormInput\r\n              label=\"Last name\"\r\n              name=\"lastName\"\r\n              placeholder=\"ex: Joseph\"\r\n            />\r\n            <FormInput\r\n              label=\"Address\"\r\n              name=\"address1\"\r\n              placeholder=\"ex: No 11 Peterson Str\"\r\n            />\r\n            <FormInput\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              placeholder=\"ex: samuel@gmail\"\r\n            />\r\n            <FormInput\r\n              label=\"City\"\r\n              name=\"city\"\r\n              placeholder=\"ex: Lagos Island\"\r\n            />\r\n            <FormInput label=\"ZIP Code\" name=\"zip\" placeholder=\"ex: 110001\" />\r\n            <SelectInput\r\n              value={shippingCountry}\r\n              handleOnChange={(value) => setShippingCountry(value)}\r\n              optionList={countries}\r\n              label=\"Shipping Country\"\r\n              className={classes.selectInput}\r\n            />\r\n            <SelectInput\r\n              value={shippingSubdivision}\r\n              handleOnChange={(value) => setShippingSubdivision(value)}\r\n              optionList={subdivisions}\r\n              label=\"Shipping Subdivision\"\r\n              className={classes.selectInput}\r\n            />\r\n            <SelectInput\r\n              value={shippingOption}\r\n              handleOnChange={(value) => setShippingOption(value)}\r\n              optionList={options}\r\n              label=\"Shipping Options\"\r\n              className={classes.selectInput}\r\n            />\r\n          </Grid>\r\n          <div className={classes.addressButtons}>\r\n            <Button\r\n              component={Link}\r\n              to=\"/cart\"\r\n              variant=\"outlined\"\r\n              className={classes.addressButton}\r\n            >\r\n              Back To Cart\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.addressButton}\r\n            >\r\n              Next\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","import React from \"react\";\r\nimport { ListItem, Typography, List, ListItemText } from \"@material-ui/core\";\r\n\r\nconst Review = ({ checkoutToken }) => {\r\n  return (\r\n    <>\r\n      <Typography gutterBottom variant=\"h6\" align=\"center\">\r\n        Summery Of Purchase\r\n      </Typography>\r\n      <List disablePadding>\r\n        {checkoutToken.live.line_items.map((product) => (\r\n          <ListItem key={product.name}>\r\n            <ListItemText\r\n              primary={product.name}\r\n              secondary={product.price.formatted_with_symbol}\r\n            />\r\n            <div>\r\n              <Typography variant=\"body2\">\r\n                {product.line_total.formatted_with_symbol}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" style={{ color: \"grey\" }}>\r\n                Quatity:{product.quantity}\r\n              </Typography>\r\n            </div>\r\n          </ListItem>\r\n        ))}\r\n        <ListItem>\r\n          <ListItemText primary=\"Subtotal:\" />\r\n          <Typography variant=\"h5\">\r\n            {checkoutToken.live.subtotal.formatted_with_symbol}\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import React from \"react\";\r\nimport { Typography, Button, Divider } from \"@material-ui/core\";\r\nimport {\r\n  Elements,\r\n  CardElement,\r\n  ElementsConsumer,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n\r\nimport useStyle from \"./styles\";\r\nimport Review from \"./Review\";\r\n\r\nconst PaymentForm = ({ prevStep, shippingData, checkoutToken }) => {\r\n  const classes = useStyle();\r\n  const stripePromise = loadStripe(\r\n    process.env.REACT_APP_STRIPE_PUBLIC_TEST_KEY\r\n  );\r\n\r\n  const handleSubmit = async (event, elements, stripe) => {\r\n    event.preventDefault();\r\n    if (!stripe || !elements) return;\r\n    const getCardElement = elements.getElement(CardElement);\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: getCardElement,\r\n    });\r\n\r\n    if (error) {\r\n      console.log(\"[error]\", error);\r\n    } else {\r\n      // const orderData = {\r\n      //   line_items: checkoutToken.live.line_items,\r\n      //   customer: {\r\n      //     Name: {\r\n      //       first_name: shippingData.firstName,\r\n      //       last_name: shippingData.lastName,\r\n      //     },\r\n      //     email: shippingData.email,\r\n      //   },\r\n      //   shipping: {\r\n      //     name: \"primary\",\r\n      //     city: shippingData.city,\r\n      //     shipping_state: shippingData.shippingSubdivision,\r\n      //     shipping_country: shippingData.shippingCountry,\r\n      //     zip_code: shippingData.zip,\r\n      //   },\r\n      //   fulfillment: { shippingMethod: checkoutToken.shipping_methods },\r\n      //   payment: {\r\n      //     gateway: \"stripe\",\r\n      //     stripe: { paymentMethod_id: checkoutToken.gateways[0].id },\r\n      //   },\r\n      // };\r\n      console.log(\"[PaymentMethod]\", paymentMethod);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Review checkoutToken={checkoutToken} />\r\n      <Divider />\r\n      <Typography align=\"center\" variant=\"h6\">\r\n        Payment Method\r\n      </Typography>\r\n      <Elements stripe={stripePromise}>\r\n        <ElementsConsumer>\r\n          {({ elements, stripe }) => (\r\n            <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\r\n              <br />\r\n              <CardElement elements={elements} stripe={stripe} />\r\n              <br />\r\n              <div className={classes.paymentButtons}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.paymentButton}\r\n                >\r\n                  Make Payment\r\n                </Button>\r\n                <Button\r\n                  onClick={prevStep}\r\n                  variant=\"text\"\r\n                  className={classes.paymentButton}\r\n                >\r\n                  go back\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </ElementsConsumer>\r\n      </Elements>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Paper,\r\n  Stepper,\r\n  StepLabel,\r\n  Typography,\r\n  Step,\r\n  createTheme,\r\n  ThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport useStyle from \"./styles\";\r\nimport { commerce } from \"../../../lib/commerce\";\r\nimport { green, blue } from \"@material-ui/core/colors\";\r\nimport AddressForm from \"../AddressForm\";\r\nimport PaymentForm from \"../PaymentForm\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: blue[500],\r\n    },\r\n    secondary: {\r\n      main: green[200],\r\n    },\r\n  },\r\n});\r\n\r\nconst steps = [\"Shipping Address\", \"Payment Details\"];\r\nconst Checkout = ({ cart }) => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [checkoutToken, setCheckoutToken] = useState(null);\r\n  const [shippingData, setShippingData] = useState({});\r\n  const classes = useStyle();\r\n\r\n  useEffect(() => {\r\n    const generateToken = async () => {\r\n      try {\r\n        const token = await commerce.checkout.generateToken(cart.id, {\r\n          type: \"cart\",\r\n        });\r\n\r\n        setCheckoutToken(token);\r\n      } catch (e) {\r\n        console.log(\"generate token error:\", e);\r\n      }\r\n    };\r\n    generateToken();\r\n  }, [cart]);\r\n\r\n  const next = (data) => {\r\n    setShippingData(data);\r\n    nextStep();\r\n  };\r\n\r\n  const nextStep = () => {\r\n    setActiveStep((prev) => prev + 1);\r\n  };\r\n  const prevStep = () => {\r\n    setActiveStep((prev) => prev - 1);\r\n  };\r\n\r\n  const Form = () =>\r\n    activeStep === 0 ? (\r\n      <AddressForm checkoutToken={checkoutToken} next={next} />\r\n    ) : (\r\n      <PaymentForm\r\n        checkoutToken={checkoutToken}\r\n        shippingData={shippingData}\r\n        prevStep={prevStep}\r\n      />\r\n    );\r\n\r\n  const Confirmation = () => <div>completed!</div>;\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <main className={classes.main}>\r\n          <Paper className={classes.papper}>\r\n            <Typography variant=\"h4\" align=\"center\">\r\n              Checkout\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n              {steps.map((step) => (\r\n                <Step key={step}>\r\n                  <StepLabel>{step}</StepLabel>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n            {activeStep === steps.length ? (\r\n              <Confirmation />\r\n            ) : (\r\n              checkoutToken && <Form />\r\n            )}\r\n          </Paper>\r\n        </main>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Products, Navbar, Cart, Checkout } from \"./components\";\nimport { commerce } from \"./lib/commerce\";\nimport \"./App.css\";\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState({});\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCart();\n  }, []);\n\n  const fetchProducts = async () => {\n    try {\n      const { data } = await commerce.products.list();\n\n      setProducts(data);\n    } catch (e) {\n      console.log(\"this is the error\", e);\n    }\n  };\n  const fetchCart = async () => {\n    try {\n      const cart = await commerce.cart.retrieve();\n      setCart(cart);\n    } catch (e) {\n      console.log(\"this is the error\", e);\n    }\n  };\n  const handleAddToCart = async (productId, quantity) => {\n    try {\n      const { cart } = await commerce.cart.add(productId, quantity);\n      setCart(cart);\n    } catch (e) {\n      console.log(\"add to cart error\", e);\n    }\n  };\n  const handleUpdateCartQty = async (productId, quantity) => {\n    try {\n      const { cart } = await commerce.cart.update(productId, { quantity });\n      setCart(cart);\n    } catch (e) {\n      console.log(\"update Error\", e);\n    }\n  };\n  const handleRemoveFromCart = async (productId) => {\n    try {\n      const { cart } = await commerce.cart.remove(productId);\n      setCart(cart);\n    } catch (e) {\n      console.log(\"handleRemoveFromCart Error\", e);\n    }\n  };\n  const handleEmptyCart = async () => {\n    try {\n      const { cart } = await commerce.cart.empty();\n      setCart(cart);\n    } catch (e) {\n      console.log(\"handleEmptyCart Error\", e);\n    }\n  };\n\n  return (\n    <Router>\n      <Navbar quantity={cart.total_items} />\n      <Switch>\n        <Route exact path=\"/e-commerce-store\">\n          {products.length === 0 ? (\n            <p className=\"loading\">Loading...</p>\n          ) : (\n            <Products products={products} handleAddToCart={handleAddToCart} />\n          )}\n        </Route>\n        <Route exact path=\"/cart\">\n          <Cart\n            cart={cart}\n            empty={handleEmptyCart}\n            remove={handleRemoveFromCart}\n            update={handleUpdateCartQty}\n          />\n        </Route>\n        <Route path=\"/checkout\">\n          <Checkout cart={cart} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}